version: '3.8'

services:
  # FastAPI Backend
  api:
    build:
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
      - UPLOAD_DIR=./uploads
      - PROCESSED_DIR=./processed
      - GRADES_DIR=./grades
      - EXPORTS_DIR=./exports
      - GOOGLE_GEMINI_API_KEY=${GOOGLE_GEMINI_API_KEY}
      - GOOGLE_VISION_API_KEY=${GOOGLE_VISION_API_KEY}
      - PERPLEXITY_API_KEY=${PERPLEXITY_API_KEY}
      - YOLO_MODEL_PATH=${YOLO_MODEL_PATH}
      - TROCR_MODEL_NAME=microsoft/trocr-base-handwritten
      - CONFIDENCE_THRESHOLD=0.5
      - MAX_CONCURRENT_JOBS=5
      - LOG_LEVEL=INFO
    volumes:
      - ./uploads:/app/uploads
      - ./processed:/app/processed
      - ./grades:/app/grades
      - ./exports:/app/exports
      - ./models:/app/models
    command: ["uvicorn", "api.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Streamlit Dashboard
  dashboard-streamlit:
    build:
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "8501:8501"
    environment:
      - API_BASE_URL=http://api:8000
    volumes:
      - ./uploads:/app/uploads
      - ./processed:/app/processed
      - ./grades:/app/grades
      - ./exports:/app/exports
    command: ["streamlit", "run", "dashboard/streamlit_app.py", "--server.port", "8501", "--server.address", "0.0.0.0"]
    depends_on:
      - api
    restart: unless-stopped

  # Gradio Dashboard
  dashboard-gradio:
    build:
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "7860:7860"
    environment:
      - API_BASE_URL=http://api:8000
    volumes:
      - ./uploads:/app/uploads
      - ./processed:/app/processed
      - ./grades:/app/grades
      - ./exports:/app/exports
    command: ["python", "dashboard/gradio_app.py"]
    depends_on:
      - api
    restart: unless-stopped

volumes:
  uploads:
  processed:
  grades:
  exports:

networks:
  default:
    name: edugrade_network
